# -*- coding: utf-8 -*-
"""stock_return_analyzer.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1rB10qcGnSLKtDQUZnl0loO9oOyCCXbhc
"""


import streamlit as st
import yfinance as yf
import pandas as pd
import matplotlib.pyplot as plt

st.set_page_config(page_title="Stock Return Analyzer", layout="centered")

# Title
st.title("ðŸ“ˆ Stock Return Analyzer")

# User inputs
ticker = st.text_input("Enter Stock Symbol (e.g., AAPL):", value="AAPL")
start_date = st.date_input("Start Date:", value=pd.to_datetime("2020-01-01"))
end_date = st.date_input("End Date:", value=pd.to_datetime("2024-12-31"))

# Run analysis when button is clicked
if st.button("Analyze"):
    try:
        # Download data
        data = yf.download(ticker, start=start_date, end=end_date)
        data = data[['Close']].rename(columns={'Adj Close': 'price'})

        # Calculate returns
        data['daily_return'] = data['price'].pct_change()
        data['cumulative_return'] = (1 + data['daily_return']).cumprod()

        # Show metrics
        st.subheader(f"{ticker} Cumulative Return")
        st.write(f"Total Return: **{(data['cumulative_return'].iloc[-1] - 1) * 100:.2f}%**")

        # Plot cumulative return
        fig, ax = plt.subplots(figsize=(10, 5))
        ax.plot(data['cumulative_return'], label="Cumulative Return")
        ax.set_title(f"{ticker} Growth of $1")
        ax.set_xlabel("Date")
        ax.set_ylabel("Cumulative Value")
        ax.grid(True)
        ax.legend()
        st.pyplot(fig)

    except Exception as e:
        st.error(f"Error: {e}")
